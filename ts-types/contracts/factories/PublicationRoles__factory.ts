/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PublicationRoles } from "../PublicationRoles";

export class PublicationRoles__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(ens_: string, overrides?: Overrides): Promise<PublicationRoles> {
    return super.deploy(ens_, overrides || {}) as Promise<PublicationRoles>;
  }
  getDeployTransaction(
    ens_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(ens_, overrides || {});
  }
  attach(address: string): PublicationRoles {
    return super.attach(address) as PublicationRoles;
  }
  connect(signer: Signer): PublicationRoles__factory {
    return super.connect(signer) as PublicationRoles__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PublicationRoles {
    return new Contract(address, _abi, signerOrProvider) as PublicationRoles;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ens_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "roleName",
        type: "string",
      },
    ],
    name: "encodeRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "ens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "publicationNode",
        type: "bytes32",
      },
    ],
    name: "getContributorId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "publicationNode",
        type: "bytes32",
      },
    ],
    name: "getRole",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "publicationNode",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "modifyRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "publicationNode",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ownsPublication",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "publicationNode",
        type: "bytes32",
      },
    ],
    name: "publicationOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "roles",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161061a38038061061a8339818101604052602081101561003357600080fd5b5051606081901b6001600160601b0319166080526001600160a01b03166105ae61006c600039806102d8528061035052506105ae6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639b51325c1161005b5780639b51325c14610173578063d7c9d9b914610190578063df4b2b3014610236578063fa17b4931461026f57610088565b8063203bac611461008d5780633f15457f146100d857806387645d07146101095780639535665114610156575b600080fd5b6100c6600480360360408110156100a357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356102b0565b60408051918252519081900360200190f35b6100e06102d6565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101426004803603604081101561011f57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff166102fa565b604080519115158252519081900360200190f35b6100c66004803603602081101561016c57600080fd5b503561033a565b6100e06004803603602081101561018957600080fd5b503561034c565b6100c6600480360360208110156101a657600080fd5b8101906020810181356401000000008111156101c157600080fd5b8201836020820111156101d357600080fd5b803590602001918460018302840111640100000000831117156101f557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103f1945050505050565b6100c66004803603604081101561024c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610486565b6102ae6004803603606081101561028557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602081013590604001356104dd565b005b60008060006102bf8585610486565b815260200190815260200160002054905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008173ffffffffffffffffffffffffffffffffffffffff1661031c8461034c565b73ffffffffffffffffffffffffffffffffffffffff16149392505050565b60006020819052908152604090205481565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156103bf57600080fd5b505afa1580156103d3573d6000803e3d6000fd5b505050506040513d60208110156103e957600080fd5b505192915050565b6000816040516020018082805190602001908083835b6020831061044457805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610407565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050919050565b6040805160609390931b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166020808501919091526034808501939093528151808503909301835260549093019052805191012090565b816104e881336102fa565b61055357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f53656e646572206d757374206265207075626c69636174696f6e206f776e6572604482015290519081900360640190fd5b816000806105618787610486565b81526020810191909152604001600020555050505056fea2646970667358221220737742a7d8e80362a7ab98829bb2fe888ec3be028785a6f0911e102df687cf9a64736f6c63430006080033";
